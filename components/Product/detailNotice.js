import React from 'react';
import LabelWrap from 'Components/common/LabelWrap';
import Palette from 'Styled/palette';
import { withStyles } from '@material-ui/core/styles';

const detailNotice = ({ classes }) => {
  const config = [
    '本產品請勿在台灣或非覆蓋地區插卡，以免產生龐大額外的費用，導致後續無法正常上網使用。',
    '本產品將於付款完成後出貨。訂購日的隔日中午12:00之前可免費取消訂單，本產品的款項及運費將會辦理退款；訂購日的隔日中午12:00之後取消訂單，本產品的款項將會辦理退款，但會收取手續費40元。',
    '本產品已取卡後視同使用，恕不接受退貨，請您同意本規定並請務必確認後再購買。',
    '預訂本產品，若未於約定取卡日到後7日內至機場櫃台取貨時，本產品將自動退回本公司，且隔日訂單自動取消；本產品款項將會辦理退款，但會收取手續費40元。請務必依約定日期前往取卡，避免訂單失效。',
    '每款手機支援之網路頻段不盡相同，購買前請先行確認手機品牌或型號是否適用，若因相容性問題導致本產品無法上網，恕不退費。白牌、電信業者自有品牌手機、鎖卡機或解鎖機，無法使用本產品。',
    '本產品皆有「開卡期限」與「可用天數」，請務必在期限內開卡使用，逾期將自動失效，恕不接受退費。',
    [
      '本產品在使用服務期間內無法中斷上網服務，所有上網服務一旦開通使用，不得暫停，請確認使用時間再行開通。本產品係以日計算，手機插入本產品即自動開通啟用，開通當日即算第一天，按照台灣時區自然日計算，超過台灣00:00即計算成一天，天數使用完畢即失效，無法延長使用。',
      '※以5天方案為例：日本時間2019年7月15日9:00 AM開通，使用期限至2019年7月19日11:59 PM。'
    ],
    '本產品僅提供上網功能，無提供加值、電話語音及簡訊服務。',
    '實際訊號及連線速度會受地區、地形、氣候、建物遮蔽、使用人數、網路系統或終端設備等因素影響而有所差異，如當地或手機無法支援4G網路時，將自動轉為3G訊號。',
    '分享網路(熱點)時，須注意您持有的裝置設備是否支援熱點分享。請斟酌每人使用狀況，若要享有最佳品質，還是建議個人使用，如分享有問題，恕本公司不接受處理。',
    '本產品遵循網路通信公平使用原則(FUP)，不建議長時間觀看視頻，下載及分享熱點。電信公司會對短時間內使用極大網路流量使用者進行流量管制，可能導致短時間內無法上網或速度變慢。為避免手機APP後台自動更新備份、雲端硬碟的自動上傳備份功能、社群軟體自動播放及圖片下載、測速軟體等系統作業耗損您的網路用量，建議使用網卡上網時，非必要請避免使用上述功能。待有免費Wi-Fi可使用時，再開啟使用。',
    '本公司保留將來新增、修改、解釋或刪除所提供各項服務之全部或一部之權利，且不另行個別通知，請依產品網頁最新公告為準，恕不另行通知。',
    '本公司保留不當使用時變更本使用條款的權利而無需另行通知並即時生效。',
    '若本產品用戶違反台灣或當地法律規定，或違反任一注意事項、使用條款時，本公司有權不經通知、隨時取消或停止用戶之使用資格，或加以限制，以維護全體用戶權利，用戶不得因此要求補償或賠償；違反情形嚴重或涉及觸法疑慮者，本公司有權交由主管機關或司法機關處理；用戶同意本公司就用戶之行為是否符合本條款之規定，及是否必須採行何等之因應措施，有視違反之情形加以裁量決定之權利。',
    '若您抵達目的地無法使用，請於48小時內與客服連絡，恕不接受未與客服連絡回國要求退費。'
  ];
  return (
    <div className={classes.root}>
      <LabelWrap value='注意事項' />
      <div className={classes.content}>
        <span className='title'>
          當您購買酷遊卡（以下簡稱本產品）即表示同意並接受以下條款：
        </span>
        {config.map((txt, i) => (
          <li key={i}>
            {!Array.isArray(txt) ? (
              <span>{txt}</span>
            ) : (
              <span>
                {txt.map((t, i) => (
                  <p key={i}>{t}</p>
                ))}
              </span>
            )}
          </li>
        ))}
      </div>
    </div>
  );
};

const styles = {
  root: {
    maxWidth: '700px'
  },
  content: {
    fontSize: '16px',
    fontWeight: 300,
    color: Palette.secondary['gray-60'],
    '& .title': {
      paddingLeft: '8px 1em 0 0'
    },
    '& li': {
      width: 'calc(100% - 2.2em)',
      listStyle: 'none',
      position: 'relative',
      paddingTop: '8px',
      marginLeft: '1em',
      left: '1.2em',
      counterIncrement: 'list'
    },
    '& li:before': {
      content: 'counter(list)"."',

      position: 'absolute',
      left: '-1.2em'
    }
  }
};
export default withStyles(styles)(detailNotice);
